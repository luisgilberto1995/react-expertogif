{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imagenes","useFetchGifs","imagen","GifExpertApp","categories","categoria","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OAEI,sBAAMC,SAZW,SAACC,GAElBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,KAElBO,QAAQC,IAAI,oBAKZ,SACI,uBACIC,KAAK,OACLC,MAAOX,EACPY,SArBc,SAACT,GAEvBF,EAAcE,EAAEU,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAETC,EAFS,iDAEuCC,UAAUH,GAFjD,+DAGII,MAAMF,GAHV,cAGTG,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAEd,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAV9B,kBAeRM,GAfQ,4CAAH,sDCEPO,EAAc,SAACL,GAExB,OADAjB,QAAQC,IAAIgB,GAER,sBAAKM,UAAU,yCAAf,UAEI,qBAAKC,IAAKP,EAAIR,IAAKgB,IAAKR,EAAIE,QAC5B,4BAAIF,EAAIE,YCHPO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAAEA,GAC7B,IAAD,EAC8BhB,mBACtB,CACIuB,KAAK,GACLa,SAAQ,IAJpB,mBACWC,EADX,KACkBC,EADlB,KAuBQ,OAhBAC,qBAAU,WAENxB,EAASC,GACRwB,MAAK,SAAAC,GAEEH,EACI,CACIf,KAAKkB,EACLL,SAAQ,SAMzB,CAACpB,IAEGqB,EDtBwBK,CAAa1B,GAAnCyB,EAFsB,EAE3BlB,KAAea,EAFY,EAEZA,QAEvB,OACI,qCACI,6BAAKpB,IACJoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAEIS,EAAShB,KAAI,SAAAkB,GAAM,OACf,cAAC,EAAD,eAEIA,GADCA,EAAOhB,aEuBjBiB,EAlCM,WACrB,MAIwC5C,mBAAS,CAAC,oBAJlD,mBAIW6C,EAJX,KAIuB9C,EAJvB,KAWI,OACA,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ8C,EAAWpB,KAAI,SAAAqB,GAAS,OAEpB,cAAC,EAAD,CAEA9B,SAAU8B,GADLA,Y,MCvBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.34294289.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => \r\n    {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        console.log(\"posteado submit\");\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category)=>\r\n    {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category) }&limit=10&api_key=G1DLV2Ufwq6u4fQJ15APfQoZ7oJF2l11`;\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n        const gifs = data.map(img=>\r\n            {\r\n                return {\r\n                    id: img.id,\r\n                    title: img.title,\r\n                    url: img.images.downsized_medium.url\r\n\r\n                };\r\n            });\r\n            \r\n        return gifs;\r\n    };","import React from 'react'\r\n\r\nexport const GifGridItem = (img) => {\r\n    console.log(img);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            \r\n            <img src={img.url} alt={img.title}/>\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React/*, {useState, useEffect}*/ from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const { data:imagenes, loading } = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>loading</p>}\r\n            <div className=\"card-grid\">\r\n            {\r\n                imagenes.map(imagen =>\r\n                    <GifGridItem \r\n                    key={imagen.id}\r\n                    {...imagen}/>\r\n\r\n                    )\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category )=>\r\n{\r\n    const [state, setstate] = useState(\r\n        {\r\n            data:[], \r\n            loading:true\r\n        });\r\n        \r\n        useEffect(()=>\r\n        {\r\n            getGifs( category )\r\n            .then(imagenes=>\r\n                {\r\n                    setstate(\r\n                        {\r\n                            data:imagenes,\r\n                            loading:false\r\n                        }\r\n                    );\r\n\r\n\r\n                });\r\n        }, [category]);\r\n        \r\n        return state;\r\n}","//Usar snipet rafc\r\nimport React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = (  ) =>\r\n{\r\n    //No se hace asi\r\n    //const categories = ['crash bandicoot', 'spyro', 'cuphead']\r\n\r\n    const [categories, setCategories] = useState(['crash bandicoot']);\r\n\r\n    // const clicAgregarJuego = (e)=>\r\n    // {\r\n    //     setCategories([...categories, 'bloodborne']);\r\n    // };\r\n\r\n    return (\r\n    <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n        \r\n        <ol>\r\n            {\r\n                categories.map(categoria =>\r\n                    \r\n                    <GifGrid \r\n                    key={categoria}\r\n                    category={categoria}/>\r\n\r\n                    )\r\n            }\r\n\r\n        </ol>\r\n    </>\r\n        );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GiftExpertApp from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}